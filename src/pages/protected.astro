---
import Layout from '../layouts/Layout.astro';
---

<Layout>
    <div class="protected-content">
        <div id="password-form" class="password-form">
            <h1>Protected Page</h1>
            <p class="hint">Hint: who is the best?</p>
            <div id="error-message" class="error-message" style="display: none;">
                <span>‚ùå Incorrect password</span>
            </div>
            <div class="password-input-container">
                <input type="password" id="password-input" placeholder="Enter password" />
                <button type="button" class="toggle-password" id="toggle-password">
                    <span class="show">üëÅÔ∏è</span>
                    <span class="hide" style="display: none;">üö´</span>
                </button>
            </div>
            <button id="submit-button">Submit</button>
        </div>
    </div>
</Layout>

<script is:inline>
    // Make functions globally available
    window.showError = function() {
        const errorMessage = document.getElementById('error-message');
        if (!errorMessage) return;
        
        // Show error
        errorMessage.style.display = 'block';
        errorMessage.style.opacity = '1';
        
        // Clear error after 3 seconds
        setTimeout(() => {
            errorMessage.style.opacity = '0';
            setTimeout(() => {
                errorMessage.style.display = 'none';
            }, 300); // Wait for fade out animation
        }, 3000);
    }

    window.togglePassword = function() {
        const passwordInput = document.getElementById('password-input');
        const showIcon = document.querySelector('.toggle-password .show');
        const hideIcon = document.querySelector('.toggle-password .hide');
        
        if (!passwordInput || !showIcon || !hideIcon) return;

        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            showIcon.style.display = 'none';
            hideIcon.style.display = 'inline';
        } else {
            passwordInput.type = 'password';
            showIcon.style.display = 'inline';
            hideIcon.style.display = 'none';
        }
    }

    window.checkPassword = function() {
        const passwordInput = document.getElementById('password-input');
        if (!passwordInput) return;

        if (passwordInput.value === 'kayceisthebest') {
            // Store in session storage so it persists during the session
            sessionStorage.setItem('passwordEntered', 'true');
            // Redirect to kayce page
            window.location.href = '/kayce';
        } else {
            showError();
            passwordInput.value = ''; // Clear the input
            passwordInput.focus(); // Focus back on input
        }
    }

    // Initialize event listeners when the document is ready
    document.addEventListener('DOMContentLoaded', function() {
        // Check if password was already entered in this session
        if (sessionStorage.getItem('passwordEntered') === 'true') {
            window.location.href = '/kayce';
        }

        // Add click handlers
        const toggleBtn = document.getElementById('toggle-password');
        if (toggleBtn) {
            toggleBtn.addEventListener('click', togglePassword);
        }

        const submitBtn = document.getElementById('submit-button');
        if (submitBtn) {
            submitBtn.addEventListener('click', checkPassword);
        }

        // Add enter key support
        const passwordInput = document.getElementById('password-input');
        if (passwordInput) {
            passwordInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    checkPassword();
                }
            });
        }
    });
</script>

<style>
    .protected-content {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: calc(100vh - 8rem);
        padding: 2rem;
    }

    .password-form {
        background: rgba(144, 144, 144, 0.075);
        padding: 2rem;
        border-radius: 8px;
        text-align: center;
        border: 1px solid rgba(144, 144, 144, 0.25);
        max-width: 400px;
        width: 100%;
        box-sizing: border-box;
    }

    .hint {
        color: rgba(255, 255, 255, 0.6);
        font-style: italic;
        margin-bottom: 1.5rem;
    }

    .error-message {
        background-color: rgba(255, 87, 87, 0.1);
        color: #ff5757;
        padding: 0.75rem;
        border-radius: 4px;
        margin-bottom: 1rem;
        border: 1px solid rgba(255, 87, 87, 0.2);
        transition: opacity 0.3s ease;
    }

    .password-input-container {
        position: relative;
        width: 100%;
        margin-bottom: 1rem;
        box-sizing: border-box;
    }

    input {
        width: 100%;
        padding: 0.75rem;
        padding-right: 3rem;
        border: 1px solid rgba(144, 144, 144, 0.25);
        border-radius: 4px;
        background: rgba(255, 255, 255, 0.05);
        color: #fff;
        font-size: 1rem;
        box-sizing: border-box;
    }

    input:focus {
        outline: none;
        border-color: #70c7be;
    }

    .toggle-password {
        position: absolute;
        right: 0.75rem;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none;
        padding: 0.25rem;
        cursor: pointer;
        font-size: 1.2rem;
        color: rgba(255, 255, 255, 0.6);
    }

    .toggle-password:hover {
        opacity: 0.8;
    }

    button:not(.toggle-password) {
        background-color: #70c7be;
        color: #fff;
        border: none;
        padding: 0.75rem 2rem;
        border-radius: 4px;
        cursor: pointer;
        font-size: 1rem;
        transition: background-color 0.2s ease;
    }

    button:not(.toggle-password):hover {
        background-color: #8cd1ca;
    }

    h1 {
        margin-bottom: 1rem;
        color: #fff;
    }

    * {
        box-sizing: border-box;
    }
</style>
